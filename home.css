@font-face{
    font-family: CBook; 
    src:url(./fonts/CircularSp-Book-4f217aebee53ffc72f4444f79041ffa5.woff)
}

@font-face{
    font-family: CBold; 
    src:url(./fonts/CircularSp-Bold-79ebb2bdea919cebedea4884d08c499e.woff)
}

@font-face{
    font-family: CMed; 
    src:url(./fonts/CircularStd-Medium.otf)
}

@font-face{
    font-family: CLight; 
    src:url(./fonts/CircularStd-Light.otf)
}

@font-face{
    font-family: CBook2; 
    src:url(./fonts/CircularSpUIv3T-Book.ttf)

}

#loading-screen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--sec-color);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999; /* Ensure it's on top of everything */
}


.custom-cursor {
    /* display: none; Hide the custom cursor initially */


}
.custom-cursor-container {
    pointer-events: none;
}

.custom-cursor {
    fill: rgba(255, 255, 255, 0.904);
    stroke-width: 0.1px;
    stroke: var(--t1-color);
    backdrop-filter: ;
    mix-blend-mode: exclusion;
    width: 30px;
    height: 23px;
    
    position: absolute;
    pointer-events: none;
    transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275), opacity 0.5s ease-out 0.3s; /* Added cubic-bezier for smooth scale-up transition */
    transform-origin: 50% 50%;
    z-index: 100000000000;
    transform: scale(1); /* Initial scale value */
     opacity: 0; /* Start with opacity 0 */
}



.pointer-active {
    fill: var(--accent-color) !important;
    opacity: 1;
    stroke: none;
    width: 31px;
    /* height: 25.3px; */
    /* transform: scale(5); Initial scale value */
    transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275), opacity 0.5s ease-out 0.3s; Added cubic-bezier for smooth scale-up transition





   
    
}

.custom-cursor svg {
    image-rendering: optimizeSpeed; /* Older browsers */
    image-rendering: -moz-crisp-edges; /* Firefox */
    image-rendering: -o-crisp-edges; /* Opera */
    image-rendering: -webkit-optimize-contrast; /* Webkit (Safari/Chrome) */
    image-rendering: pixelated; /* Chrome, Firefox, Opera, Safari */
    image-rendering: optimize-contrast; /* CSS3 Proposed */
    -ms-interpolation-mode: nearest-neighbor; /* IE8+ */
  
  }
  





:root {

    --resize: url('./Images/resize.png');

    
  

    cursor: default;

    

    --bg-color: #000000; /* Background color */
    /* section */
    --sec-color: #121212;
    --secgrad-color1: rgba(18, 18, 18, 0);
    --secgrad-color2: rgba(18, 18, 18, 1);


    /* base white text */
    --t1-color: #ffffff; /* Text color */
    /* text hover colors */
    --t2-color: rgb(206, 206, 206);
    /* card subtext */
    
    --t3-color: #919191;
    /* custom scroll */
    --scroll-color: rgba(128, 128, 128, 0.699);
    /* cards */
    --c-color: #181818;
    --c2-color: #252525;
    --arrow-color: rgba(0,0,0,.7);
    --accent-color: #1ed760 ;
    --accent-pickerbg: #000000a4;
    --searchbox: #252525;
    --searchbox-hover: #303030;
    --back-hover: rgb(22, 22, 22);
    --buttondef: #222222;
    --transition-speed: 0.7s; /* Define transition speed */
    --black: black;
    --buttonhov: #333333;
    --artist: #b3b3b3;
    --progress: hsla(0,0%,100%,.3);
    --leftright: hsla(0,0%,100%,.7);
    --lighttext: white;
    --lighttext2: var(--t3-color);
    ;





}



h2{
    font-size: 2rem;
    font-weight: 800;
    font-family: cbold;
    color: var(--t1-color);
    letter-spacing: -1px;
    -webkit-font-smoothing: antialiased;

}

h3{
    font-size: 1rem;
    font-weight: 100;
    font-family: cmed;
    color: var(--t1-color);
    letter-spacing: 0px;
    -webkit-font-smoothing: antialiased;
    

}

/* Define your color variables for dark mode */

/* Apply the default dark mode colors */
body {
    display: flex;
    background-color: var(--bg-color);
    color: var(--t1-color);
    transition: background-color var(--transition-speed), color var(--transition-speed);




}

/* Define styles for light mode using the opposite colors */

body.light-mode {
    --lighttext2: rgb(199, 199, 199);

    --resize: url('./Images/resizeb.png');


    --banner: url(./Images/bannerw.png);
    --bannerphn: url(./Images/bannerphnw.png);


    --bg-color: #ffffff; /* Background color */
    --t1-color: #000000; /* Text color */
    --t2-color: rgb(85, 85, 85);
    --t3-color: #252525;
    --accent-pickerbg: #ffffffad;


    --sec-color: #eeeeee;
    --secgrad-color1: rgba(238, 238, 238, 0);
    --secgrad-color2: rgba(238, 238, 238, 1);
    --lighttext: white;

    --scroll-color: rgb(219, 219, 219);
    --c-color: white;
    --c2-color: black;
    --arrow-color: rgba(211, 211, 211, 0.7);
    transition: background-color var(--transition-speed), color var(--transition-speed);
    --searchbox: white;
    --searchbox-hover: #eeeeee;
    --back-hover: rgb(245, 245, 245);
    --black: white;
    --buttondef: #ffffff;
    --buttonhov: #cacaca;
    --artist: #414141;
    --progress: #b8b8b8;
    --leftright: #585858;
    --background-rgb: 238,238,238; /* Default RGB values, adjust as needed */







    


    
}

/* Update your styles for light mode using inverted colors */
body.light-mode .sticky-top-bar::before, body.light-mode .backgradient::before{
    filter: saturate(100%) brightness(100%);; Desaturate the background color by 20%

}

body.light-mode h2,
body.light-mode h3,
body.light-mode p {
    /* Inverted text styles */
    color: var(--t1-color);
    color: var(--t1-color);
    transition: color var(--transition-speed);
}

/* body.light-mode svg path {
    filter: invert(1);
    transition: background-color var(--transition-speed), color var(--transition-speed);

} */


/* body.light-mode svg:not(.projects .list .item .play svg) {
    filter: invert(100%);

    transition: filter var(--transition-speed);

} */


/* Your existing dark mode styles */
/* Define your dark mode styles here */

.projects img,
.projects h2 {
    transition: opacity 0.3s ease-in-out;
}

.home,
.greyed-out {
    box-sizing: border-box;
    -webkit-tap-highlight-color: transparent;
    margin-block: 0px;
    font-size: 1rem;
    font-weight: 600;
    font-family: cbold;
    text-decoration: none;
    transition: stroke 0.3s ease, fill 0.3s ease;  /* Add transition for both stroke and fill */
    
}




.home {
    cursor: none !important;
    color: var(--t1-color);
    transition: color 0.3s ease;  /* Adjust the duration and timing function as needed */
    transition: stroke 0.3s ease, fill 0.3s ease;  /* Add transition for both stroke and fill */
}

.greyed-out path {
    transition: stroke 0.3s ease, color 0.3s ease, fill 0.3s ease;  /* Adjust the duration and timing function as needed */
    fill: transparent;
    stroke: var(--t2-color);
    stroke-width: 2px;
    stroke-linejoin: round; /* Set the line join to round for inside stroke */
    stroke-linecap: round; /* Set the line cap to round for inside stroke */
    color: inherit;
}

.greyed-out {
    color: var(--t2-color);  /* Adjust the color to your desired grey color */
    transition: all 0.3s ease;  /* Adjust the duration and timing function as needed */

}

.greyed-out .home {
    color: var(--t2-color);  /* Adjust the color to your desired grey color */
    transition: color 0.3s ease;  /* Adjust the duration and timing function as needed */

}

.home:not(.home-greyed-out):hover {
    color: var(--t1-color); /* Change to your desired color on hover */
    fill: var(--t1-color);
    transition: all 0.3s ease;  /* Adjust the duration and timing function as needed */


}

.hover-on-search-box-open .home:hover svg path {
    stroke: var(--t1-color);
}



/* 
.home:not(.home-greyed-out):hover path,
.greyed-out:not(.home-greyed-out) path {
    stroke: var(--t1-color);

    transition: all 0.3s ease;  /* Adjust the duration and timing function as needed */

/* Add this rule to apply hover effect when the search box is open */



.search{
    cursor: none!important;
    -webkit-font-smoothing: antialiased;
    z-index: 600;

    box-sizing: border-box;
    -webkit-tap-highlight-color: transparent;
    margin-block: 0px;
    font-size: 1rem;
    font-weight: 600;
    font-family: cbold;
    text-decoration: none;
    transition: color 0.3s ease-in-out;
    color: var(--t2-color);


}

/* Hide the search box by default */
.search-box {
    z-index: 600;

    display: none;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    align-items: center;
    width: 40%;
}

#card {
    transition: all 0.5s ease-out; /* Adjust the duration and easing as needed */
  }

/* Style the search input */
#searchInput {
    padding: 8px;
    margin: 10px 0;
    box-sizing: border-box;
    border-radius: 100px;
    background-color: var(--searchbox);
    box-shadow: none; /* Set box-shadow to none or customize it as needed */
    border-style:solid;
    border-color: transparent;
    width: calc(100% - 30px); /* Adjust the width to accommodate the icon */
    padding-left: 40px; /* Add padding to the left of the input */
    font-family: cmed; /* Replace "Your Preferred Font" with the desired font-family */
    font-size: 16px; /* Adjust the font size as needed */
    height: 43px;
    color: var(--t1-color);

}

/* Additional styling for the input, if necessary */
#searchInput::placeholder {
    color: #888; /* Adjust the color of the placeholder text */
    font-family: cbook;
}

#searchInput:hover{
    z-index: -1;
    background-color: var(--searchbox-hover);
    transition: background-color 0.1s ease-in-out;
}
#searchInput:focus {
        color: var(--t1-color); /* Change the text color on focus */
        appearance: none;
        outline: solid 2px var(--t1-color);
        

}

#searchInput:focus + .search-box .search-icon .search-icon-svg {
    fill: white;
}



.search-icon {
    z-index: 10;
    position: absolute;
    top: 52%;
    left: 12px;
    transform: translateY(-50%);
}

.search-icon-svg {
    width: 20px;
    height: 20px;
    fill: var(--t2-color); /* Adjust the color of the search icon */
}

#searchInput:focus .search-icon svg {
    fill: red; /* Change the color of the search icon SVG when the input is in focus */
}




/* Add this to your CSS */
.search.active {
    color: var(--t1-color);
}




/* Change color on hover */
.search:hover {
    color: var(--t1-color);
}

/* Change the color when the search box is open */
.search-box-open .search {
    color: var(--t1-color);
}

/* Initially hide the first child path */
.search-inactive path:first-child {
    fill: transparent;
    transition: fill 0.3s ease-in-out; /* Adjust the duration and timing function as needed */
}

/* Show the first child path when the search box is open */
.search.active path:first-child {
    fill: var(--t1-color); /* Use 'currentColor' or the desired color value */
}



.cls-1{
    fill: var(--t1-color);
    stroke-width: 0px;
    text-decoration: none;
}

a .cls-1 {
    transition: fill 0.5s ease; /* Add a smooth transition effect */
  }

  a:hover .cls-1 {
    fill: var(--accent-color);

  }


.navigation{
    background-color: var(--sec-color);
    border-radius: 8px;  
    transition: all  0.3s ease-in-out;

}

.navigation:hover{
    background-color: var(--back-hover);
    transition: all  0.3s ease-in-out;
}

.bottomnav{
    background-color: var(--sec-color);
    border-radius: 8px; 
    margin-top: 8px;  
    height: 73vh; /* Subtracting the top navigation's height from the viewport height */
    /* Add some content or text to make it visible */
    /* For example: */
    /* color: white; */
    padding: 22px 24px;
    transition: all  0.3s ease-in-out;
    /* overflow-y: scroll; */


}

.bottomnav:hover{
    background-color: var(--back-hover);
    transition: all  0.3s ease-in-out;

}


/* .bottomnav:hover .buttons{
    z-index: 2000000;
    transition: all 2s ease;
    box-shadow: 0px 50px 0px black; /* Add your desired shadow values here */





.home-active{
    color: inherit;
}

.search-inactive{
    color: inherit;
}



.about{
    box-sizing: border-box;
    -webkit-tap-highlight-color: transparent;
    margin-block: 0px;
    font-size: 1rem;
    font-weight: 600;
    font-family: cbold;
    color: var(--t2-color);
    text-decoration: none;
    transition: color 0.3s ease-in-out;
    cursor: none !important;

}
.about svg{

    vertical-align: middle; /* Align the SVG vertically with the text */
    width: 1.5em; /* Set the width relative to the font size */
    height: 1.5em; /* Set the height relative to the font size */
    fill: currentColor; /* Makes the SVG inherit the text color */
    margin-right: 15px; /* Adjust the spacing between the SVG and text */
    margin-top: -4px;
}
.bottomnav:hover a.about {
    color: var(--t1-color);

    fill: var(--t1-color); /* Set the fill color to white when hovering over .bottomnav */
}
.navigation li{
    padding: 10px 12px;
}

.navpadding{
    margin: 0px;
    padding: 12px 12px;
}

.navigation .navpadding li a svg {
    vertical-align: middle; /* Align the SVG vertically with the text */
    width: 1.5em; /* Set the width relative to the font size */
    height: 1.5em; /* Set the height relative to the font size */
    fill: currentColor; /* Makes the SVG inherit the text color */
    margin-right: 15px; /* Adjust the spacing between the SVG and text */
    margin-top: -4px;
}



/* Styling the sidebar */
.sidebar {
    cursor: none !important;
    width: 400px; /* Initial width */
    position: relative;
    overflow: hidden;
    border-radius: 0 0 8px 8px;
    flex: 0 0 auto;
    animation: slideIn 1.2s ease-in-out;
    /* animation-delay: 0s; */
  
    transition: all 0.5s ease; /* Moved transition property here */
 
}

@keyframes slideIn {
    0% {
      transform: translateX(-30%);
      opacity: 0;
    }
    100% {
      transform: translateX(0);
      opacity: 1;
    }
  }



.sidebar ul li{
    list-style: none
    
}

/* Styling the resize handle */
.resize-handle {
    width: 10px;
    height: 100%;
    position: absolute;
    top: 0;
    right: -10px; /* Adjusted to create space from the edge */
    padding: 0 5px; /* Padding to avoid overlapping with rounded corners */
    /* cursor: col-resize;  */
    cursor: var(--resize) 5 10, auto; /* Use the variable here */

    
    background-color: transparent;
    z-index: 1; /* Ensure the handle is above other elements */
}


.home-page {
    cursor: none !important;
    border-radius: 8px;
    margin-left: 8px;
    flex: 1 1 auto;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    background-color: var(--sec-color);
    /* background-color: red; */
}



.container {
    cursor: none;
    display: flex;
    height: 90vh; /* Adjust as needed */
    flex: 1;
    max-width: 100%;

}

.custom-scroll {
    /* Remove max-height to allow the component to auto-adjust */
    overflow-x: hidden;
    overflow-y: auto;
    flex: 1; /* Fill available vertical space */
    position: relative;
    /* background-color: var(--sec-color); */
    padding-right: 0px;
    z-index: 0;
    transition: background-color 0.3s ease-in-out;


}


.custom-scroll:hover {
    /* background-color: rgba(var(--back-hover)0.5); */

    transition: background-color 0.3s ease-in-out;
    /* background: linear-gradient(to top, var(--sec-color) 50%, black 90%); */

}

 /* For WebKit (Safari/Chrome) */
 .custom-scroll::-webkit-scrollbar {
    cursor: pointer;
     width: 10px; /* Width of the scrollbar */
     z-index: -100;
     overflow: overlay;
     background-color: transparent;
     position: sticky;


 }
 
 /* For WebKit (Safari/Chrome) - Track */
 .custom-scroll::-webkit-scrollbar-track {
    cursor: pointer;

     background-color: transparent; /* Transparent background */
     z-index: -100;

 }
 
 /* For WebKit (Safari/Chrome) - Handle */
 .custom-scroll::-webkit-scrollbar-thumb {
     background-color: var(--scroll-color); /* Color of the scrollbar */
     border-radius: 0px; /* Rounded corners for the scrollbar */
     z-index: -100;
     cursor: pointer;


     
 }

 .custom-scroll::-webkit-scrollbar-thumb:hover{
    background-color: var(--t1-color); /* Color of the scrollbar */
   


    
}
 
 :root {
    --sticky-bg-color: rgba(255, 0, 0, 0.5); /* Red background with 0.5 opacity */
}

.sticky-top-bar {
    z-index: 5000;
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: auto;
    top: 0; 
    position: sticky;
    padding: 20px 25px;
    transition: background 0.4s ease, backdrop-filter 0.5s ease;

    /* Use CSS variables for RGB and alpha values */
    background: rgba(var(--background-rgb), var(--background-alpha));

    /* Other styles for the sticky bar */
    /* box-shadow: 0 4px 60px rgba(0,0,0,.2); */
}

.sticky-top-bar::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(var(--background-rgb), var(--background-alpha));
    z-index: -1; /* Ensure the pseudo-element is behind the content */
    filter: saturate(80%) brightness(40%);; Desaturate the background color by 20%

}

/* Additional styling for the content within .sticky-top-bar if needed */


.sticky-top-bar.scrolled{
    background: var(--sec-color);

}



/* .backgradient{
    top: 0;
    width: 100%;
    height:100px;
    margin-bottom: -100px;
    position: sticky;
    background: red;
    background: linear-gradient(to top, var(--secgrad-color1) 0%, var(--secgrad-color2) 30%);
    z-index: 400;
    opacity: 1;



}
 */


 .backgradient {
    width: 100%;
    height: 73px;
    position: relative;
    z-index: 0;
    margin-bottom: -73px;
    top: 0;
}

.backgradient::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    background: rgba(var(--background-rgb), var(--background-alpha));

}

/* Additional styling for the content within .backgradient if needed */


.backgradient::before{
    filter: saturate(80%) brightness(40%);; /* Desaturate the background color by 20% */
}

.colored-path {
    fill: var(--svg-fill-color, white);
  }

.color-picker-container {
    position: relative;
    display: inline-block; /* To make sure the SVG overlay stays within the container */

    

}
#colorSwatch {
    width: 23px;
    height: 23px;
    border-radius: 50%;
    background-color: red;
    cursor: pointer;
    border: 5px solid var(--accent-pickerbg); /* Add a 20px black border */
    transition: border 0.3s ease-in-out;


  }
  
#colorSwatch:hover{
    border: 5px solid var(--accent-color); /* Add a 20px black border */
    transition: border 0.3s ease-in-out;
}
.svg-overlay {
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none; /* Ensure the overlay does not interfere with button clicks */
}

#svgOverlay svg path{
    fill: var(--svg-fill-color, white);
    ; /* Example: Set the fill color of the SVG to white */

}

.colourbtns{

    display: flex; /* To make buttons align horizontally */
    gap: 10px;
    align-items: center;
    
}

/* Hide the input checkbox */
.visually-hidden {
    position: absolute;
    overflow: hidden;
    clip: rect(0 0 0 0);
    height: 1px;
    width: 1px;
    margin: -1px;
    padding: 0;
    border: 0;

}


.backforward {
    display: flex;
    gap: 8px;



}
button.back.disabled,
button.forward.disabled {
    cursor: not-allowed;
    opacity: 0.6;
}

button.back:not(.disabled),
button.forward:not(.disabled) {
    cursor: pointer;
    opacity: 1;
}



.back, .forward {
    background-color: var(--arrow-color);
    border: none;
    border-radius: 50%;
    color: #fff;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    height: 32px;
    width: 32px;
    position: relative;
    transition: opacity 0.4s, cursor 0.4s;
}

.backarrow, .forwardarrow {
    fill: var(--t1-color);
    width: var(--encore-graphic-size-decorative-smaller, 16px);
    height: var(--encore-graphic-size-decorative-smaller, 16px);
    opacity: 0.6;
}



.back:not(.disabled):hover::after, .forward:not(.disabled):hover::after {
    opacity: 1;
}

.back::after, .forward:after {
    content: attr(data-title);
    position: absolute;
    bottom: -38px;
    left: 50%;
    font-family: cbook;
    font-weight: 400;
    letter-spacing: 0px;
    transform: translateX(-50%);
    background-color: rgb(66, 66, 66);
    color: #ffffff;
    padding: 5px 10px 7px 10px;
    border-radius: 4px;
    font-size: 0.8rem;
    white-space: nowrap;
    box-shadow: 0 7px 10px rgba(0, 0, 0, 0.3);
    opacity: 0;
    transition: opacity 0.4s, transform 0.4s ease;
    transition-delay: 0.3s;
    -webkit-font-smoothing: antialiased;
    z-index: 10;
    pointer-events: none; /* Prevent pseudo-element from capturing pointer events */

}


.banner{
    content: attr();
    display: block !important;
    animation: floatIn 1.5s ease-in-out;
   

   
    border-radius: 6px;
    transition: all 0.5s ease; /* Moved transition property here */


   

}





@keyframes floatIn {
    0% {
      transform: translateY(-30%);
      opacity: 0;
    }
    100% {
      transform: translateY(0);
      opacity: 1;
    }
  }
  
  .item {
    opacity: 0;
    animation: fadeIn 1s forwards;
}

@keyframes fadeIn {
    0% {
        opacity: 0;
        transform: translateY(20px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

/* .item:nth-child(n) {
    animation-delay: calc(0.1s * (n - 1));
} */

.bannerphn{
    border-radius: 6px;
    animation: floatIn 1.5s ease-in-out;
   

   
    border-radius: 6px;
    transition: all 0.5s ease; /* Moved transition property here */



    display: none !important;
}


/* grid for playlists */

.projects{
    padding: 20px 30px;
}

.projects a{
    text-decoration: none;
}

.projects .list {
    margin: 0 auto;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
    grid-row-gap: 15px;
    grid-column-gap: 30px;

    justify-content: space-around; /* Adjust alignment if needed */
    width: 100%; /* Ensure the grid fills the width of its container */
}

.projects .list .item {
    padding: 15px 15px 0px 15px;
    background-color: var(--c-color);
    border-radius: 6px;
    cursor: none !important;
    transition: all 0.3s ease;


    transition: all ease 0.4s;
    width: calc(100% - 30px); /* Set width minus the gap to maintain consistent gaps */
    /* max-width: 500px; Set maximum width for the item */
    height: calc(100% - 12%);

}


.projects .list .item:hover{
    background-color: var(--c2-color);

}

.projects .list .item:hover h3{
    color: var(--lighttext);    

}

.projects .list .item:hover p {
    color: var(--lighttext2);    
    text-decoration: none;

    

}

.projects .list .item img{
    width: 100%;
    padding-bottom: 0px;
    transition: transform 0.3s ease; /* Added transition property for smooth scaling */

  
}

.imgbox{
    overflow: hidden;
    height: auto;
    width: auto;
    aspect-ratio: 1;
    border-radius: 6px;
    margin-bottom: 40px;
    -webkit-box-shadow: 0 8px 24px rgba(0,0,0,.5);
    box-shadow: 0 8px 24px rgba(0,0,0,.5);
}

.projects .list .item:hover img{
    transform: scale(1.1); /* Changed scale to transform and adjusted value */
 
 }


.projects .list .item .play {
    position: relative;
}


.projects .list .item svg{
    position: absolute;
    right: 10px;
    top: -85px;
    padding: 12px;
    fill: var(--svg-fill-color);
    background-color: var(--accent-color);
    border-radius: 100%;
    opacity: 0;
    transition: all ease 0.4s;
    
    -webkit-box-shadow: 0 8px 8px rgba(0,0,0,.3);
    box-shadow: 0 8px 8px rgba(0,0,0,.3);
}


.projects .list .item:hover .play svg{
    opacity: 1;
    transform: translateY(-11px);

}






.projects .list .item .play svg:hover{
    transition: transform 0.4s ease-in-out; /* Transition for transform */
    filter: brightness(1.03);
    scale: 1.04;
}
.projects .list .item .play svg:hover:not(:focus){
    transition: none; /* Remove the transition for filter */
    filter: brightness(1.02);
}

.projects .list .item h3{
    position: relative;
    top: -20px;
}

.projects .list .item p{
    position: relative;
    top: -28px;
    font-size: 0.88rem;
    font-weight: 500;
    font-family: cbook2;
    color: var(--t3-color);
}


/* Other styles */

#colorDisplay {
    margin-top: 10px;
    padding: 5px;
    border: 1px solid #ccc;
    display: inline-block;
    font-family: Arial, sans-serif;
}

/* Additional styles for the color picker */


.buttons{
    padding-bottom: 15px;
    z-index: 50000;
    display: flex;
    flex-direction: right;
    cursor: none !important;
}



.me, .contact{
    margin-top: 20px;
    flex-direction: right;
    padding: 6px 13px;
    border-radius: 600px;
    background-color: var(--buttondef);
    color: var(--t1-color);
    border: none;
    text-align: center;
    text-decoration: none;
    font-size: 0.8125rem;
    margin-right: 10px; /* Adjust the margin between buttons as needed */


    cursor: none !important;
    font-family: cbook;
    transition: all 0.2s ease-in-out;



}

.me:focus, .me.active {
    background-color: var(--t1-color);
    color: var(--black);
    transition: all 0.2s ease-in-out;


}

.contact:focus, .contact.active {
    background-color: var(--t1-color);
    color: var(--black);
    transition: all 0.2s ease-in-out;

}
.me:not(:focus):hover, .contact:not(:focus):hover {
        background-color: var(--buttonhov);
        transition: all 0.2s ease-in-out;
}



@keyframes fadeInFromLeft {
    from {
        opacity: 0;
        transform: translateX(-50px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

.metext,

.contactform {
    opacity: 0;
    visibility: hidden;
    position: absolute;


    transition: opacity 0.5s ease-in-out, visibility 0.5s ease-in-out; /* Adjust the duration and timing function as needed */
}

.show {
    opacity: 1;
    visibility: visible;
}




.metext {
    /* position:absolute; */


    max-width: 400px;
    padding-right: 25px;
    overflow-y: scroll;
    padding-bottom: 900px;
    height: 220px;
   

}

.contactform {
    /* position:absolute; */


    padding-right: 220px;
    overflow-y: scroll;
    padding-bottom: 900px;
    height: 220px;
    padding-left: 3px;
   

}


 .contactform::-webkit-scrollbar  {
    width: 0px; /* Adjust the width of the scrollbar */
}

 .contactform::-webkit-scrollbar-thumb {
    background-color: transparent; /* Adjust the color of the scrollbar thumb */
    border-radius: 3px; /* Adjust the border-radius of the scrollbar thumb */
}

.contactform::-webkit-scrollbar-track {
    background-color: none; /* Adjust the color of the scrollbar track */
}



.metext::-webkit-scrollbar   {
    width: 0px; /* Adjust the width of the scrollbar */
}

.metext::-webkit-scrollbar-thumb,  {
    background-color: transparent; /* Adjust the color of the scrollbar thumb */
    border-radius: 3px; /* Adjust the border-radius of the scrollbar thumb */
}

.metext::-webkit-scrollbar-track {
    background-color: none; /* Adjust the color of the scrollbar track */
}



.metext h5{
    font-size: 1.1rem;
    font-weight: 400;
    font-family: cbook;
    color: grey;
    letter-spacing: auto;
    -webkit-font-smoothing: antialiased;
    margin-bottom: -28px;
    margin-top: 36px;
}

.metext h4{
    margin-top: 45px;
    font-size: 2.5rem;
    font-weight: 400;
    font-family: cmed;
    color: var(--t1-color);
    letter-spacing: auto;
    -webkit-font-smoothing: antialiased;
    color: var(--accent-color);
    margin-bottom: 5px;
    transition: all 0.3s ease-in-out;
        opacity: 0;
        /* transform: translateX(-50px); */
        animation: fadeInFromLeft 1s ease-out forwards;

        cursor: none !important;
    
    }
    



.metext h4:hover{
    text-decoration: underline;
    text-underline-offset: 6px;
    transition: all 0.3s ease-in-out;

}
.metext p{
    font-size: 1rem;
    font-weight: 400;
    font-family: cbook;
    color: var(--t1-color);
    letter-spacing: auto;
    -webkit-font-smoothing: antialiased;
}


#p2 {
    display: none;
}

.metext .highlight {
    color: rgb(119, 0, 255); /* Change this to the desired highlight color */
}

.contactform {
    width: 100%;
    margin-top: 30px;
    display: flex;
    flex-direction: column;
    /* padding-right: 20px;  */
    max-width: 225px; 
    
}

.contactform input{
    font-family: clight;
}

.contactform label{
    font-family: cmed;
}

.contactform .form-group {
    margin-bottom: 20px;
}

.contactform label {
    font-size: 16px;
    margin-bottom: 8px;
    display: flex;
    align-items: center;
}

.contactform .required-indicator {
    color: var(--accent-color);
    margin-left: 4px;
}

.contactform input,
.contactform textarea {
    width: 100%;
    padding: 12px;
    border: none;
    border-radius: 5px;
    background-color: var(--c-color);
    color: var(--t1-color);
    transition: border-color 0.3s ease-in-out, background-color 0.3s ease-in-out;
}

#message {
    resize: none; /* Prevent resizing in the x-direction */
    height: 85px;
    font-family: clight;
}

#message::-webkit-scrollbar {
    width: 4px; /* Adjust the width of the scrollbar */
}

#message::-webkit-scrollbar-thumb {
    background-color: #888; /* Adjust the color of the scrollbar thumb */
    border-radius: 3px; /* Adjust the border-radius of the scrollbar thumb */
}

#message::-webkit-scrollbar-track {
    background-color: none; /* Adjust the color of the scrollbar track */
}





.contactform input::placeholder,
.contactform textarea::placeholder {
    color: #6D6D6D;
}

.contactform input:focus,
.contactform textarea:focus {
    
    border: ;
    outline: 2px solid var(--accent-color);
    border-color: #1DB954;
    background-color: var(--c2-color);
}

.contactform button {
    font-family: cbold;
    margin: auto;
    width: 250px;
    background-color: var(--t1-color);
    color: var(--black);
    padding: 12px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s ease-in-out;
    align-self: center;
}

.contactform button:hover {
    background-color: var(--accent-color);
}


.color-picker-container:hover::before {
    content: attr(title);  /* Set the content to the 'title' attribute */
    position: absolute;
    bottom: -38px;
    left: 50%;
    font-family: cbook;
    font-weight: 400;
    letter-spacing: 0px;
    transform: translateX(-50%);
    background-color: rgb(66, 66, 66);
    color: #ffffff;
    padding: 5px 10px 7px 10px;
    border-radius: 4px;
    font-size: 0.8rem;
    white-space: nowrap;
    -webkit-box-shadow: 0 7px 10px rgba(0,0,0,.3);
    box-shadow: 0 7px 10px rgba(0, 0, 0, 0.3);
    opacity: 0; /* Initially hidden */
    transition: opacity 0.4s, transform 0.4s ease; /* Add opacity transition */
    transition-delay: 0.3s; /* Delay the transition by 0.2s */
    -webkit-font-smoothing: antialiased;
    z-index: 10;

}

/* Show the caption on hover */
.color-picker-container:hover::before {
    opacity: 1;
}

.toggle-switch:hover::before {
    content: attr(title);  /* Set the content to the 'title' attribute */
    position: absolute;
    bottom: -38px;
    left: 50%;
    font-family: cbook;
    font-weight: 400;
    letter-spacing: 0px;
    transform: translateX(-50%);
    background-color: rgb(66, 66, 66);
    color: #ffffff;
    padding: 5px 10px 7px 10px;
    border-radius: 4px;
    font-size: 0.8rem;
    white-space: nowrap;
    -webkit-box-shadow: 0 7px 10px rgba(0,0,0,.3);
    box-shadow: 0 7px 10px rgba(0, 0, 0, 0.3);
    opacity: 0; /* Initially hidden */
    transition: opacity 0.4s, transform 0.4s ease; /* Add opacity transition */
    transition-delay: 0.3s; /* Delay the transition by 0.2s */
    -webkit-font-smoothing: antialiased;
    z-index: 10;
}

.toggle-switch:hover::before {
    opacity: 1;
}

#sharedialog{
    width: 0;
    display: none;
}

.phonelogo {
    width: 16px;
    height: 16px;
    display: inline-block;
    background-color: var(--accent-color);
    padding: 7px;
    border-radius: 100px;
    margin: auto;
    margin-right: 10px; /* Add spacing between the logo and buttons if needed */

    vertical-align: middle; /* Adjust vertical alignment */

    background: linear-gradient(-45deg,  var(--accent-color), var(--accent-color), var(--accent-color), rgb(124, 240, 16), #d9e900,  #FFA63D, #FF3D77,  #338AFF, #3CF0C5, var(--accent-color), var(--accent-color));
    background-size: 800%;
    animation: anime 16s linear infinite;
}

@keyframes anime {
    0% {
        background-position: 0% 50%;
    }
    100% {
        background-position: 100% 50%;
    }
}


  .phonenav {
    display: none;
    /* display: flex; */
    align-items: center; /* Center items vertically */
    justify-content: center; /* Center items horizontally */

  }
  

  
  .phonenav svg {

    width: 16px; /* Adjust the width of the SVG as needed */
    /* height: 16px; Maintain the aspect ratio */
    fill: var(--black);
    
  }
  
  .phonebtn1, .phonebtn2, .phonebtn3 {
    display: none;
    /* margin-top: 20px; */
    flex-direction: right;
    padding: 6px 13px;
    border-radius: 600px;
    background-color: var(--buttondef);
    color: var(--t1-color);
    border: none;
    text-align: center;
    text-decoration: none;
    font-size: 0.8125rem;
    margin-right: 10px; /* Adjust the margin between buttons as needed */


    cursor: pointer;
    font-family: cbook;
    transition: all 0.2s ease-in-out;

}


/* 
@media only screen
  and (min-width: 1024px)
  and (max-height: 1366px)
  and (-webkit-min-device-pixel-ratio: 1.5)
  and (device-aspect-ratio: 1024/1366x) { */


@media  only screen and (max-height: 800px) {
    .container {
     
        height: 88vh; /* Adjust as needed */
    }
    
}

/* 
@media only screen
and (min-device-width: 768px) 
and (max-device-width: 1024px) 
and (-webkit-min-device-pixel-ratio: 1.5) { */


/* /* @media only screen
  and (min-width: 1024px)
  and (max-height: 1366px)
  and (-webkit-min-device-pixel-ratio: 1.5)
  and (device-aspect-ratio: 1024/1366x) { */ 

    /* and (min-device-width: 400px) and */
 
    @media only screen and (max-device-width: 1180px) {
      
/* @media only screen and (max-width: 1366px) { */

   

 

    :root, body, .custom-scroll, .projects{
        cursor: default;
        
    }

  

    .projects a{
        cursor:pointer
    }


    .projects .list .item {
     
        cursor: pointer !important;
    
    }

      /* Styles for small screens go here */

      h2{
        font-size: 2rem;
        font-weight: 100;
        font-family: cbold;
        color: var(--t1-color);
        letter-spacing: -1px;
        -webkit-font-smoothing: antialiased;
    
    }

    .toggle-switch:hover::before {
      display: none;

    }

    .scrolling-text{
        display: none;
    }


    .custom-cursor-container{
        display: none;
    }
    

    

   
    .backgradient{
        display: none;
        
    
    }

    .slider{
        scale: 0.95;

    }

    .phonenav{
        display: block;
        display: flex;
        gap: 0px;
    }

    .sidebar {
        width: 400px; /* Initial width */
        position: relative;
        overflow: hidden;
        border-radius: 0 0 8px 8px;
        flex: 0 0 auto;
        display: none;

    }

    .custom-scroll{
        padding-bottom: 200px;
        

        
        
    }

    .custom-scroll::-webkit-scrollbar {
        display: none; 
   }

    :root {
        /* background-color: var(--sec-color); */
        /* background-color: var(--sec-color); */

        position: fixed;
        

    }

    body {
        display: flex;
        background: transparent;
        padding: 0;
        color: var(--sec-color);
        transition: background-color var(--transition-speed), color var(--transition-speed);    
    }

    
    .container{
        height: 100vh;

    }    
    
    .home-page {
        margin-left: -8px;
        border-radius: 0;
        margin-top: -8px;
        margin-right: -8px;
        height: 100vh;
        

        

        
       
    }

    .color-picker-container {
        display: none; /* To make sure the SVG overlay stays within the container */
    
        
    
    }

    .backforward{
        display: none;
    }



    .projects .list {
   
        /* grid-template-columns: repeat(auto-fill, minmax(160px, 1fr)); */
        grid-row-gap: 15px;
        grid-column-gap: 20px;

    }
    
    .projects .list .item {
        padding: 15px 15px 0px 15px;

    
        width: calc(100% - 30px); /* Set width minus the gap to maintain consistent gaps */
        /* max-width: 500px; Set maximum width for the item */
        height: calc(100% - 12%);
    
    }

    .phonenav{
        display: flex;
    }

    .phonebtn1, .phonebtn2, .phonebtn3 {
        display: flex;

  }

  .phonebtn1{
    background-color: var(--accent-color);
    color: var(--black);
} 


.sticky-top-bar {
    z-index: 500;
    display: flex;
    align-items: center;
    vertical-align: middle;
    justify-content: space-between;
    height: 50px;
    top: 0; 
    background: var(--sec-color);
    /* background: linear-gradient(to top, var(--secgrad-color1) 0%, var(--secgrad-color2) 90%); */
    /* Other styles for the sticky bar */
    padding: 5px 25px;
    box-shadow: 0 5px 16px var(--sec-color); /* horizontal offset, vertical offset, blur radius, color */
    padding-top: 10px;

}

.sticky-top-bar::before{
    background: var(--sec-color);


}

}


@media only screen and (max-width: 1025px) {
    .bottomnav{
        height: 75vh;
    }

}


/* Small screens (phones) */
@media only screen and (max-width: 1024px) {
    /* Styles for small screens go here */
    

    h2{
        font-size: 2rem;
        font-weight: 100;
        font-family: cbold;
        color: var(--t1-color);
        letter-spacing: -1px;
        -webkit-font-smoothing: antialiased;
    
    }

    .toggle-switch:hover::before {
      display: none;

    }

    .scrolling-text{
        display: none;
    }


    .custom-cursor-container{
        display: none;
    }
    

    

   
    .backgradient{
        display: none;
        
    
    }

    .slider{
        scale: 0.95;

    }

    .phonenav{
        display: block;
        display: flex;
        gap: 0px;
    }

    .sidebar {
        width: 400px; /* Initial width */
        position: relative;
        overflow: hidden;
        border-radius: 0 0 8px 8px;
        flex: 0 0 auto;
        display: none;

    }

    .custom-scroll{
        padding-bottom: 200px;
        

        
        
    }

    .custom-scroll::-webkit-scrollbar {
        display: none; 
   }

    :root {
        /* background-color: var(--sec-color); */
        /* background-color: var(--sec-color); */

        position: fixed;
        

    }

    body {
        display: flex;
        background: transparent;
        padding: 0;
        color: var(--sec-color);
        transition: background-color var(--transition-speed), color var(--transition-speed);    
    }

    body.l
    .container{
        height: 100vh;

    }    
    
    .home-page {
        margin-left: -8px;
        border-radius: 0;
        margin-top: -8px;
        margin-right: -8px;
        

        

        
       
    }

    .color-picker-container {
        display: none; /* To make sure the SVG overlay stays within the container */
    
        
    
    }

    .backforward{
        display: none;
    }



    .projects .list {
   
        /* grid-template-columns: repeat(auto-fill, minmax(160px, 1fr)); */
        grid-row-gap: 15px;
        grid-column-gap: 20px;

    }
    
    .projects .list .item {
        padding: 15px 15px 0px 15px;

    
        width: calc(100% - 30px); /* Set width minus the gap to maintain consistent gaps */
        /* max-width: 500px; Set maximum width for the item */
        height: calc(100% - 12%);
    
    }

    .phonenav{
        display: flex;
    }

    .phonebtn1, .phonebtn2, .phonebtn3 {
        display: flex;

  }

  .phonebtn1{
    background-color: var(--accent-color);
    color: var(--black);
} 


.sticky-top-bar {
    z-index: 500;
    display: flex;
    align-items: center;
    vertical-align: middle;
    justify-content: space-between;
    height: 50px;
    top: 0; 
    background: var(--sec-color);
    /* background: linear-gradient(to top, var(--secgrad-color1) 0%, var(--secgrad-color2) 90%); */
    /* Other styles for the sticky bar */
    padding: 5px 25px;
    box-shadow: 0 5px 16px var(--sec-color); /* horizontal offset, vertical offset, blur radius, color */
    padding-top: 10px;

}

.sticky-top-bar::before{
    background: var(--sec-color);


}

.container{
    height: 100%;
}


  
}

  @media only screen and (max-width: 430px) {


    .banner{
        display: none  !important;

   
        border-radius: 6px;
       
    
    }
    
    .bannerbox{
        display: none;
        padding-bottom: 20px;

    }


    .bannerphn{
        border-radius: 6px;
        display: block !important;
        
    }
    

    .projects .list {
   
        grid-template-columns: repeat(auto-fill, minmax(calc(50% - 10px), 1fr)); /* Each column is at least 50% width */
     
    }
    
    .projects{
        padding: 20px 15px;
    }




  .sticky-top-bar {
    z-index: 500;
    display: flex;
    align-items: center;
    vertical-align: middle;
    justify-content: space-between;
    height: 50px;
    top: 0; 
    background: var(--sec-color);
    /* background: linear-gradient(to top, var(--secgrad-color1) 0%, var(--secgrad-color2) 90%); */
    /* Other styles for the sticky bar */
    padding: 5px 15px;
    box-shadow: 0 5px 16px var(--sec-color); /* horizontal offset, vertical offset, blur radius, color */
    padding-top: 10px;

}



}


@media only screen and (max-width: 380px) {


        .phonebtn1, .phonebtn2, .phonebtn3 {
            padding: 6px 12px;
            border-radius: 600px;
   
            font-size: 0.7125rem;

        
        }

        .slider{
            scale: 0.90;
    
        }

       
    }

  @media only screen and (max-width: 320px) {
    .projects .list {
   
        grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
     
    }
    
    .projects{
        padding: 20px 10px;
    }

  }

