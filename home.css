@font-face{
    font-family: CBook; 
    src:url(./fonts/CircularSp-Book-4f217aebee53ffc72f4444f79041ffa5.woff)
}

@font-face{
    font-family: CBold; 
    src:url(./fonts/CircularSp-Bold-79ebb2bdea919cebedea4884d08c499e.woff)
}

@font-face{
    font-family: CMed; 
    src:url(./fonts/CircularStd-Medium.otf)
}

@font-face{
    font-family: CLight; 
    src:url(./fonts/CircularStd-Light.otf)
}

:root {
    --bg-color: #000000; /* Background color */
    /* section */
    --sec-color: #121212;
    /* base white text */
    --t1-color: #ffffff; /* Text color */
    /* text hover colors */
    --t2-color: rgb(206, 206, 206);
    /* card subtext */
    
    --t3-color: #919191;
    /* custom scroll */
    --scroll-color: rgba(128, 128, 128, 0.699);
    /* cards */
    --c-color: #181818;
    --c2-color: #252525;
    --arrow-color: rgba(0,0,0,.7);
    --accent-color: #1ed760 ;
    --accent-pickerbg: #000000a4;

    --transition-speed: 0.7s; /* Define transition speed */



}

h2{
    font-size: 2rem;
    font-weight: 800;
    font-family: cbold;
    color: var(--t1-color);
    letter-spacing: -1px;
    -webkit-font-smoothing: antialiased;

}

h3{
    font-size: 1rem;
    font-weight: 100;
    font-family: cmed;
    color: var(--t1-color);
    letter-spacing: 0px;
    -webkit-font-smoothing: antialiased;

}

/* Define your color variables for dark mode */

/* Apply the default dark mode colors */
body {
    display: flex;
    background-color: var(--bg-color);
    color: var(--t1-color);
    transition: background-color var(--transition-speed), color var(--transition-speed);




}

/* Define styles for light mode using the opposite colors */
body.light-mode {
    --bg-color: #ffffff; /* Background color */
    --t1-color: #000000; /* Text color */
    --t2-color: rgb(85, 85, 85);
    --t3-color: #050505;
    --accent-pickerbg: #ffffffad;


    --sec-color: #eeeeee;
    --scroll-color: rgb(219, 219, 219);
    --c-color: white;
    --c2-color: #e7e7e7;
    --arrow-color: rgba(211, 211, 211, 0.7);
    transition: background-color var(--transition-speed), color var(--transition-speed);


    
}

/* Update your styles for light mode using inverted colors */
body.light-mode h2,
body.light-mode h3,
body.light-mode p {
    /* Inverted text styles */
    color: var(--t1-color);
    color: var(--t1-color);
    transition: color var(--transition-speed);
}

/* body.light-mode svg path {
    filter: invert(1);
    transition: background-color var(--transition-speed), color var(--transition-speed);

} */


/* body.light-mode svg:not(.projects .list .item .play svg) {
    filter: invert(100%);

    transition: filter var(--transition-speed);

} */


/* Your existing dark mode styles */
/* Define your dark mode styles here */

.projects img,
.projects h2 {
    transition: opacity 0.3s ease-in-out;
}

.home,
.greyed-out {
    box-sizing: border-box;
    -webkit-tap-highlight-color: transparent;
    margin-block: 0px;
    font-size: 1rem;
    font-weight: 600;
    font-family: cbold;
    text-decoration: none;
    transition: stroke 0.3s ease, fill 0.3s ease;  /* Add transition for both stroke and fill */
    
}


.home {
    color: var(--t1-color);
    transition: color 0.3s ease;  /* Adjust the duration and timing function as needed */
    transition: stroke 0.3s ease, fill 0.3s ease;  /* Add transition for both stroke and fill */
}

.greyed-out path {
    transition: stroke 0.3s ease, color 0.3s ease, fill 0.3s ease;  /* Adjust the duration and timing function as needed */
    fill: transparent;
    stroke: var(--t2-color);
    stroke-width: 2px;
    stroke-linejoin: round; /* Set the line join to round for inside stroke */
    stroke-linecap: round; /* Set the line cap to round for inside stroke */
    color: inherit;
}


.greyed-out {
    color: var(--t2-color);  /* Adjust the color to your desired grey color */
    transition: color 0.3s ease;  /* Adjust the duration and timing function as needed */

}

.greyed-out .home {
    color: var(--t2-color);  /* Adjust the color to your desired grey color */
    transition: color 0.3s ease;  /* Adjust the duration and timing function as needed */

}


.search{
    -webkit-font-smoothing: antialiased;

    box-sizing: border-box;
    -webkit-tap-highlight-color: transparent;
    margin-block: 0px;
    font-size: 1rem;
    font-weight: 600;
    font-family: cbold;
    text-decoration: none;
    transition: color 0.3s ease-in-out;
    color: var(--t2-color);

}

/* Hide the search box by default */
.search-box {
    display: none;
}



/* Style the search input */
#searchInput {
    width: 100%;
    padding: 8px;
    margin: 10px 0;
    box-sizing: border-box;
    border-radius: 100px;
    background-color: #242424;
}

/* Add this to your CSS */
.search.active {
    color: var(--t1-color);
}



/* Change color on hover */
.search:hover {
    color: var(--t1-color);
}

/* Change the color when the search box is open */
.search-box-open .search {
    color: var(--t1-color);
}

/* Initially hide the first child path */
.search-inactive path:first-child {
    fill: transparent;
    transition: fill 0.3s ease-in-out; /* Adjust the duration and timing function as needed */
}

/* Show the first child path when the search box is open */
.search.active path:first-child {
    fill: var(--t1-color); /* Use 'currentColor' or the desired color value */
}



.cls-1{
    fill: var(--t1-color);
    stroke-width: 0px;
    text-decoration: none;
}

a .cls-1 {
    transition: fill 0.5s ease; /* Add a smooth transition effect */
  }

  a:hover .cls-1 {
    fill: var(--accent-color);

  }


.navigation{
    background-color: var(--sec-color);
    border-radius: 8px;  
}

.bottomnav{
    background-color: var(--sec-color);
    border-radius: 8px; 
    margin-top: 8px;  
    height: 73vh; /* Subtracting the top navigation's height from the viewport height */
    /* Add some content or text to make it visible */
    /* For example: */
    /* color: white; */
    padding: 22px 24px;


}

.home-active{
    color: inherit;
}

.search-inactive{
    color: inherit;
}



.about{
    box-sizing: border-box;
    -webkit-tap-highlight-color: transparent;
    margin-block: 0px;
    font-size: 1rem;
    font-weight: 600;
    font-family: cbold;
    color: var(--t2-color);
    text-decoration: none;
    transition: color 0.3s ease-in-out;
}
.about svg{

    vertical-align: middle; /* Align the SVG vertically with the text */
    width: 1.5em; /* Set the width relative to the font size */
    height: 1.5em; /* Set the height relative to the font size */
    fill: currentColor; /* Makes the SVG inherit the text color */
    margin-right: 15px; /* Adjust the spacing between the SVG and text */
    margin-top: -4px;
}
.bottomnav:hover a.about {
    color: var(--t1-color);

    fill: var(--t1-color); /* Set the fill color to white when hovering over .bottomnav */
}
.navigation li{
    padding: 10px 12px;
}

.navpadding{
    margin: 0px;
    padding: 12px 12px;
}

.navigation .navpadding li a svg {
    vertical-align: middle; /* Align the SVG vertically with the text */
    width: 1.5em; /* Set the width relative to the font size */
    height: 1.5em; /* Set the height relative to the font size */
    fill: currentColor; /* Makes the SVG inherit the text color */
    margin-right: 15px; /* Adjust the spacing between the SVG and text */
    margin-top: -4px;
}

/* Styling the sidebar */
.sidebar {
    width: 400px; /* Initial width */
    position: relative;
    overflow: hidden;
    border-radius: 0 0 8px 8px;
    flex: 0 0 auto;
}

.sidebar ul li{
    list-style: none
}

/* Styling the resize handle */
.resize-handle {
    width: 10px;
    height: 100%;
    position: absolute;
    top: 0;
    right: -10px; /* Adjusted to create space from the edge */
    padding: 0 5px; /* Padding to avoid overlapping with rounded corners */
    cursor: col-resize; /* Cursor type for resizing */
    
    background-color: transparent;
    z-index: 1; /* Ensure the handle is above other elements */
}


.home-page {
    border-radius: 8px;
    margin-left: 8px;
    flex: 1 1 auto;
    background-color: var(--sec-color);
    overflow: hidden;
    display: flex; /* Allow flex children to fill available space */
    flex-direction: column; /* Stack the child elements vertically */
}


.container {
    display: flex;
    height: 89vh; /* Adjust as needed */
    flex: 1;
    max-width: 100%;

}

.custom-scroll {
    /* Remove max-height to allow the component to auto-adjust */
    overflow-y: auto;
    flex: 1; /* Fill available vertical space */
    position: relative;
    background-color: var(--sec-color);
    padding-right: 0px;
    z-index: 400;
}
 /* For WebKit (Safari/Chrome) */
 .custom-scroll::-webkit-scrollbar {
     width: 10px; /* Width of the scrollbar */
 }
 
 /* For WebKit (Safari/Chrome) - Track */
 .custom-scroll::-webkit-scrollbar-track {
     background-color: transparent; /* Transparent background */
 }
 
 /* For WebKit (Safari/Chrome) - Handle */
 .custom-scroll::-webkit-scrollbar-thumb {
     background-color: var(--scroll-color); /* Color of the scrollbar */
     border-radius: 0px; /* Rounded corners for the scrollbar */
     
 }
 

.sticky-top-bar {
    z-index: 500;
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: auto;
    top: 0; 
    background-color: var(--sec-color);
    /* background-color: var(--sec-color); */
    /* Other styles for the sticky bar */
    padding: 20px 25px 20px 25px;
    position: sticky;
    /* backdrop-filter: blur(10px); Adjust the blur amount as needed
    transition: backdrop-filter 1s ease; Add a transition for a smoother effect */
}


.colored-path {
    fill: var(--svg-fill-color, white);
  }

.color-picker-container {
    position: relative;
    display: inline-block; /* To make sure the SVG overlay stays within the container */
    

}
#colorSwatch {
    width: 23px;
    height: 23px;
    border-radius: 50%;
    background-color: red;
    cursor: pointer;
    border: 5px solid var(--accent-pickerbg); /* Add a 20px black border */
  }
  
.svg-overlay {
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none; /* Ensure the overlay does not interfere with button clicks */
}

#svgOverlay svg path{
    fill: var(--svg-fill-color, white);
    ; /* Example: Set the fill color of the SVG to white */

}

.colourbtns{

    display: flex; /* To make buttons align horizontally */
    gap: 10px;
    align-items: center;
    
}

/* Hide the input checkbox */
.visually-hidden {
    position: absolute;
    overflow: hidden;
    clip: rect(0 0 0 0);
    height: 1px;
    width: 1px;
    margin: -1px;
    padding: 0;
    border: 0;

}

.toggle-switch {
    display: flex;
    align-items: center;
    width: 60px;
    height: 30px;
    border-radius: 25px;
    background-color: #ddd;
    position: relative;
    cursor: pointer;
    padding: 0px;
    border: none;

}

.toggle-switch input:checked + .moon {
    transform: translateX(33px);



}

.toggle-switch .moon,
.toggle-switch .sun {
    position: absolute;
    width: 30px;
    height: 30px;
    border-radius: 100%;
    transition: transform 0.3s ease;
    padding: 0px;
    box-sizing: content-box;
    
}



.toggle-switch .moon {
    background-color: #000;
    left: 2px;
    transform: translateX(0); /* Initially hide the moon on the left */
}





.backforward {
    display: flex;
    gap: 8px;
}

.back{
  
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
        background-color: var(--arrow-color);
        border: none;
        border-radius: 50%;
        color: #fff;
        cursor: pointer;
        display: -webkit-inline-box;
        display: -ms-inline-flexbox;
        display: inline-flex;
        height: 32px;
        justify-content: center;
        position: relative;
        width: 32px;
    
}

.forward{
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    background-color: var(--arrow-color);
    border: none;
    border-radius: 50%;
    color: #fff;
    cursor: pointer;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    height: 32px;
    justify-content: center;
    position: relative;
    width: 32px;
}

.backarrow{
    fill: var(--t1-color);
    width: var(--encore-graphic-size-decorative-smaller,16px);
    height: var(--encore-graphic-size-decorative-smaller,16px);
    opacity: .6;
}

.forwardarrow{
    fill: var(--t2-color);
    width: var(--encore-graphic-size-decorative-smaller,16px);
    height: var(--encore-graphic-size-decorative-smaller,16px);
    opacity: .6;
}

/* Opacity settings for arrows */
.backarrow, .forwardarrow {
    opacity: 0.6;
}

/* Disable pointer events and change cursor for disabled buttons */
.back.disabled, .forward.disabled {
    cursor: not-allowed;
}

/* Increase opacity when navigating is possible */
.back:not(.disabled) .backarrow, .forward:not(.disabled) .forwardarrow {
    opacity: 1;
}


.back:not(.disabled):after, .forward:not(.disabled):after {
    content: attr(title);
    position: absolute;
    bottom: -38px;
    left: 50%;
    font-family: cbook;
    font-weight: 400;
    letter-spacing: 0px;
    transform: translateX(-50%);
    background-color: rgb(66, 66, 66);
    color: #ffffff;
    padding: 5px 10px 7px 10px;
    border-radius: 4px;
    font-size: 0.8rem;
    white-space: nowrap;
    -webkit-box-shadow: 0 7px 10px rgba(0,0,0,.3);
    box-shadow: 0 7px 10px rgba(0, 0, 0, 0.3);
    opacity: 0; /* Initially hidden */
    transition: opacity 0.4s, transform 0.4s ease; /* Add opacity transition */
    transition-delay: 0.3s; /* Delay the transition by 0.2s */
    -webkit-font-smoothing: antialiased;
    z-index: 10;


}

.back:not(.disabled):hover::after, .forward:not(.disabled):hover::after {

    opacity: 1; /* Fade in on hover */
}




/* grid for playlists */

.projects{
    padding: 20px 30px;
}

.projects .list {
    margin: 0 auto;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
    grid-row-gap: 15px;
    grid-column-gap: 30px;

    justify-content: space-around; /* Adjust alignment if needed */
    width: 100%; /* Ensure the grid fills the width of its container */
}

.projects .list .item {
    padding: 15px 15px 0px 15px;
    background-color: var(--c-color);
    border-radius: 6px;
    cursor: pointer;
    transition: all ease 0.4s;
    width: calc(100% - 30px); /* Set width minus the gap to maintain consistent gaps */
    /* max-width: 500px; Set maximum width for the item */
    height: calc(100% - 12%);

}



.projects .list .item:hover{
    background-color: var(--c2-color);

}

.projects .list .item img{
    width: 100%;
    border-radius: 6px;
    margin-bottom: 20px;
    -webkit-box-shadow: 0 8px 24px rgba(0,0,0,.5);
    box-shadow: 0 8px 24px rgba(0,0,0,.5);
}


.projects .list .item .play {
    position: relative;
}


.projects .list .item svg{
    position: absolute;
    right: 10px;
    top: -70px;
    padding: 12px;
    fill: var(--svg-fill-color);
    background-color: var(--accent-color);
    border-radius: 100%;
    opacity: 0;
    transition: all ease 0.4s;
    
    -webkit-box-shadow: 0 8px 8px rgba(0,0,0,.3);
    box-shadow: 0 8px 8px rgba(0,0,0,.3);
}


.projects .list .item:hover .play svg{
    opacity: 1;
    transform: translateY(-11px);

}

.projects .list .item .play svg:hover{
    transition: transform 0.4s ease-in-out; /* Transition for transform */
    filter: brightness(1.03);
    scale: 1.04;
}
.projects .list .item .play svg:hover:not(:focus){
    transition: none; /* Remove the transition for filter */
    filter: brightness(1.02);
}

.projects .list .item h3{
    position: relative;
    top: -20px;
}

.projects .list .item p{
    position: relative;
    top: -28px;
    font-size: 0.88rem;
    font-weight: 500;
    font-family: cbook;
    color: var(--t3-color);
}


/* Other styles */

#colorDisplay {
    margin-top: 10px;
    padding: 5px;
    border: 1px solid #ccc;
    display: inline-block;
    font-family: Arial, sans-serif;
}

/* Additional styles for the color picker */
